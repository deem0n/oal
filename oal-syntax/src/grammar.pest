//
// Created by intellij-pest on 2021-10-16
// grammar.pest
// Author: ebastien
//

ident = @{ !keyword ~ ASCII_ALPHA ~ ASCII_ALPHANUMERIC* }

let_kw  = @{ "let"  ~ !ASCII_ALPHANUMERIC }
res_kw  = @{ "res"  ~ !ASCII_ALPHANUMERIC }

stmt_kw = { let_kw | res_kw }

any_kw  = @{ "any"  ~ !ASCII_ALPHANUMERIC }
obj_kw  = @{ "obj"  ~ !ASCII_ALPHANUMERIC }
rel_kw  = @{ "rel"  ~ !ASCII_ALPHANUMERIC }
num_kw  = @{ "num"  ~ !ASCII_ALPHANUMERIC }
str_kw  = @{ "str"  ~ !ASCII_ALPHANUMERIC }
uri_kw  = @{ "uri"  ~ !ASCII_ALPHANUMERIC }
bool_kw = @{ "bool" ~ !ASCII_ALPHANUMERIC }

type_kw = { any_kw | obj_kw | rel_kw | num_kw | str_kw | uri_kw | bool_kw }

get_kw = @{ "get" ~ !ASCII_ALPHANUMERIC }
put_kw = @{ "put" ~ !ASCII_ALPHANUMERIC }
/// TODO: add remaining HTTP methods

method_kw = { get_kw | put_kw }

keyword = { stmt_kw | type_kw | method_kw }

var = { ident }

uri_seg = @{ ( ASCII_ALPHANUMERIC | "-" | "." | "_" | "~" | "%" )+ }
uri_lit = { "/" ~ uri_seg }
uri_tpl = { "/{" ~ prop ~ "}" }
uri_spec = { ( uri_tpl | uri_lit )+ }

uri_type = { uri_kw | uri_spec }

methods = { method_kw ~ ( "," ~ method_kw )* }

prim_type = { num_kw | str_kw | bool_kw  }

prop = { ident ~ expr_type }
block_type = { "{" ~ ( prop ~ ( "," ~ prop )* )? ~ "}" }
paren_type = { "(" ~ expr_type ~ ")" }
term_type = { prim_type | uri_type | block_type | paren_type | var }
apply = { ident ~ term_type+ }
app_type = { apply | term_type }
join_type = { app_type ~ ( "&" ~ app_type )* }
any_type = { join_type ~ ( "~" ~ join_type )* }
sum_type = { any_type ~ ( "|" ~ any_type )* }
rel_type = { sum_type ~ ":" ~ methods ~ "->" ~ sum_type }
expr_type = { rel_type | sum_type }

binding = { ident }
bindings = { binding* }
hint = { ( ":" ~ type_kw )? }
decl = { let_kw ~ ident ~ bindings ~ hint ~ "=" ~ expr_type }

res = { res_kw ~ expr_type }

stmt = { decl | res }

doc = { SOI ~ ( stmt ~ ";" )* ~ EOI }

block_comment = _{ "/*" ~ ( block_comment | !"*/" ~ ANY )* ~ "*/" }
line_comment = _{ "//" ~ ( !NEWLINE ~ ANY )* }

WHITESPACE = _{ " " | "\t" | NEWLINE }
COMMENT = _{ line_comment | block_comment }
